'use client';
import Image from "next/image";
import React, { useRef, useState, useEffect } from "react";
import VerticalWindow from '../components/VerticalWindow';
import LoginSignupCard from '../components/LoginSignupCard';
import TextWindow from '../components/TextWindow';
import CarouselWindow from '../components/CarouselWindow';

export default function Home() {
  const [showLiam, setShowLiam] = useState(false);
  const [showRight, setShowRight] = useState(false);
  const [isEnterHovered, setIsEnterHovered] = useState(false);
  const [entered, setEntered] = useState(false);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const [showIntroModal, setShowIntroModal] = useState(true);
  const [loadingProgress, setLoadingProgress] = useState(0);
  
  // 拖拽功能狀態 - 支援多個視窗
  const [isDragging, setIsDragging] = useState<string | null>(null);
  const [windowPositions, setWindowPositions] = useState({
    loginCard: { x: 50, y: 50 },
    textWindow: { x: 320, y: 80 },
    carouselWindow: { x: 80, y: 220 },
    illustrationWindow: { x: 100, y: 100 }
  });
  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });

  // 視窗狀態管理
  const [windowStates, setWindowStates] = useState({
    loginCard: { minimized: false, maximized: false, closed: true },
    textWindow: { minimized: false, maximized: false, closed: true },
    carouselWindow: { minimized: false, maximized: false, closed: true },
    illustrationWindow: { minimized: false, maximized: false, closed: true }
  });

  // 視窗層級管理
  const [activeWindow, setActiveWindow] = useState<string | null>(null);
  
  // 手機版漢堡選單狀態
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [showVerticalWindow, setShowVerticalWindow] = useState(true);

  const runnerRef = useRef<HTMLImageElement>(null);
  const casesRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    setShowLiam(false);
    setShowRight(false);
    const t1 = setTimeout(() => setShowLiam(true), 100);
    const t2 = setTimeout(() => setShowLiam(true), 700);
    const t3 = setTimeout(() => setShowRight(true), 1300);
    return () => {
      clearTimeout(t1);
      clearTimeout(t2);
      clearTimeout(t3);
    };
  }, []);

  // Loading 進度條動畫
  useEffect(() => {
    if (showIntroModal) {
      const interval = setInterval(() => {
        setLoadingProgress(prev => {
          if (prev >= 100) {
            clearInterval(interval);
            // 進度完成後等待1秒再關閉視窗
            setTimeout(() => {
              setShowIntroModal(false);
            }, 1000);
            return 100;
          }
          return prev + Math.random() * 3 + 1; // 隨機增加 1-4%
        });
      }, 150); // 每150ms更新一次

      return () => clearInterval(interval);
    }
  }, [showIntroModal]);

  useEffect(() => {
    if (entered && casesRef.current) {
      setTimeout(() => {
        casesRef.current?.scrollIntoView({ behavior: 'smooth' });
      }, 1300);
    }
  }, [entered]);

  const handleEnter = () => {
    setIsTransitioning(true);
    setTimeout(() => {
      setEntered(true);
    }, 1300);
  };

  // 拖拽處理函數 - 支援多個視窗
  const handleMouseDown = (e: React.MouseEvent, windowId: string) => {
    const rect = (e.target as HTMLElement).closest('.draggable-window')?.getBoundingClientRect();
    if (rect) {
      setIsDragging(windowId);
      setActiveWindow(windowId); // 設置為活動視窗
      setDragOffset({
        x: e.clientX - rect.left,
        y: e.clientY - rect.top
      });
      e.preventDefault();
    }
  };

  const handleMouseMove = (e: React.MouseEvent) => {
    if (isDragging) {
      const container = (e.target as HTMLElement).closest('section');
      if (container) {
        const containerRect = container.getBoundingClientRect();
        const newX = e.clientX - containerRect.left - dragOffset.x;
        const newY = e.clientY - containerRect.top - dragOffset.y;
        
        // 根據不同視窗設定不同的邊界限制
        let maxX, maxY;
        switch (isDragging) {
          case 'loginCard':
            maxX = containerRect.width - 600;
            maxY = containerRect.height - 350;
            break;
          case 'textWindow':
            maxX = containerRect.width - 400;
            maxY = containerRect.height - 300;
            break;
          case 'carouselWindow':
            maxX = containerRect.width - 450;
            maxY = containerRect.height - 320;
            break;
          default:
            maxX = containerRect.width - 400;
            maxY = containerRect.height - 300;
        }
        
        setWindowPositions(prev => ({
          ...prev,
          [isDragging]: {
            x: Math.max(0, Math.min(maxX, newX)),
            y: Math.max(0, Math.min(maxY, newY))
          }
        }));
      }
    }
  };

  const handleMouseUp = () => {
    setIsDragging(null);
  };

  // 視窗控制函數
  const handleMinimize = (windowId: string) => {
    setActiveWindow(windowId); // 設置為活動視窗
    setWindowStates(prev => ({
      ...prev,
      [windowId]: { ...prev[windowId as keyof typeof prev], minimized: !prev[windowId as keyof typeof prev].minimized }
    }));
  };

  const handleMaximize = (windowId: string) => {
    setActiveWindow(windowId); // 設置為活動視窗
    setWindowStates(prev => ({
      ...prev,
      [windowId]: { ...prev[windowId as keyof typeof prev], maximized: !prev[windowId as keyof typeof prev].maximized }
    }));
  };

  const handleClose = (windowId: string) => {
    setWindowStates(prev => ({
      ...prev,
      [windowId]: { ...prev[windowId as keyof typeof prev], closed: true }
    }));
  };

  // 開啟插畫資料夾
  const openIllustrationFolder = () => {
    setWindowStates(prev => ({
      ...prev,
      loginCard: { minimized: false, maximized: false, closed: false },
      textWindow: { minimized: false, maximized: false, closed: false },
      carouselWindow: { minimized: false, maximized: false, closed: false },
      illustrationWindow: { minimized: false, maximized: false, closed: false },
      contactForm: { minimized: false, maximized: false, closed: true }
    }));
    setActiveWindow('loginCard'); // 預設第一個視窗為活動視窗
    setShowVerticalWindow(false); // 隱藏 VerticalWindow (手機版)
    setMobileMenuOpen(false); // 關閉手機選單
  };

  // 回到主頁
  const goToHome = () => {
    setWindowStates(prev => ({
      ...prev,
      loginCard: { minimized: false, maximized: false, closed: true },
      textWindow: { minimized: false, maximized: false, closed: true },
      carouselWindow: { minimized: false, maximized: false, closed: true },
      illustrationWindow: { minimized: false, maximized: false, closed: true },
      contactForm: { minimized: false, maximized: false, closed: true }
    }));
    setShowVerticalWindow(true); // 顯示 VerticalWindow
    setMobileMenuOpen(false); // 關閉手機選單
  };

  // 計算視窗的 z-index
  const getWindowZIndex = (windowId: string) => {
    // 桌面圖示層級: 15
    // 一般視窗層級: 20-25
    // 活動視窗層級: 30
    // 拖拽中視窗層級: 40
    
    if (isDragging === windowId) return 40;
    if (activeWindow === windowId) return 30;
    
    // 為不同視窗設置不同的基礎層級
    const baseZIndex = {
      loginCard: 25,
      textWindow: 22,
      carouselWindow: 20
    };
    
    return baseZIndex[windowId as keyof typeof baseZIndex] || 20;
  };

  return (
    <div className="relative min-h-screen w-full font-sans overflow-x-hidden" style={{ background: '#FFFFF3' }}>
      {/* Windows 98 風格介紹視窗 */}
      {showIntroModal && (
        <div className="fixed inset-0 flex items-center justify-center z-50 p-4">
          <div className="win98-window relative" style={{
            width: '960px',
            maxWidth: '95vw',
            maxHeight: '90vh',
            background: '#c0c0c0',
            border: '2px outset #c0c0c0',
            fontFamily: 'var(--font-zpix), var(--font-press-start-2p), monospace',
            overflow: 'hidden'
          }}>
            {/* Windows 98 標題列 */}
            <div className="win98-titlebar" style={{
              background: 'linear-gradient(90deg, #003EC3 0%, #002A8A 100%)',
              color: 'white',
              padding: '4px 6px',
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              fontSize: 'clamp(14px, 4vw, 22px)',
              fontWeight: 'bold'
            }}>
              <div className="flex items-center space-x-2">
                <div style={{
                  width: '16px',
                  height: '16px',
                  background: 'white',
                  border: '1px inset #c0c0c0'
                }}></div>
                <span>Liam Design Studio - Intro</span>
              </div>

            </div>
            
            {/* Windows 98 內容區域 */}
            <div style={{
              background: '#2a2a2a',
              color: 'white',
              padding: 'clamp(16px, 4vw, 32px)',
              fontSize: 'clamp(14px, 3.5vw, 22px)',
              lineHeight: '1.4',
              border: '2px inset #c0c0c0',
              margin: '2px',
              overflow: 'auto',
              maxHeight: 'calc(90vh - 120px)',
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'space-between'
            }}>
              {/* 文字內容區域 */}
              <div style={{ flex: '1' }}>
                {/* 中文介紹 */}
                <div style={{ 
                  marginBottom: 'clamp(16px, 4vw, 24px)',
                  textAlign: 'center',
                  fontSize: 'clamp(12px, 3vw, 18px)'
                }}>
                <p>
                  「Liam Design Studio，專注於品牌設計與視覺傳達。<br/>
                  我們相信，好的設計源於深入的理解與溝通，<br/>
                  每一個專案都承載著獨特的故事與價值。<br/>
                  在這裡，我們不只是設計師，更是創意夥伴，<br/>
                  一起打造令人印象深刻的品牌體驗。」
                </p>
              </div>
              
                {/* 英文介紹 */}
              <div style={{
                borderTop: '3px solid white',
                  paddingTop: 'clamp(12px, 3vw, 20px)',
                  textAlign: 'center',
                  fontSize: 'clamp(10px, 2.5vw, 16px)'
              }}>
                <p>
                  &ldquo;Hello, I&rsquo;m Liam.<br/>
                  Welcome to Liam Design Studio.<br/>
                  We specialize in brand identity, visual design,<br/>
                  and creative solutions that tell compelling stories.<br/>
                  Our approach combines strategic thinking with<br/>
                  artistic vision to create designs that resonate<br/>
                  with audiences and drive meaningful connections<br/>
                  between brands and their communities.&rdquo;
                </p>
              </div>
            </div>

              {/* Loading 進度條區域 */}
              <div style={{
                width: '100%',
                background: 'transparent',
                border: '2px inset #c0c0c0',
                padding: 'clamp(8px, 2vw, 16px)',
                marginTop: 'clamp(16px, 4vw, 24px)',
                flexShrink: 0
              }}>
                <div style={{
                  fontSize: 'clamp(10px, 2.5vw, 14px)',
                  marginBottom: 'clamp(4px, 1vw, 8px)',
                  color: '#ffffff',
                  fontFamily: 'var(--font-press-start-2p), monospace',
                  textShadow: '2px 2px 0px #000000',
                  textAlign: 'center'
                }}>
                  Loading... {Math.floor(loadingProgress)}%
          </div>
                {/* 分格式進度條 */}
                <div style={{
                  width: '100%',
                  height: 'clamp(20px, 4vw, 32px)',
                  border: '2px inset #c0c0c0',
                  position: 'relative',
                  background: 'transparent',
                  display: 'flex'
                }}>
                  {/* 生成10格進度條 */}
                  {Array.from({ length: 10 }, (_, index) => {
                    const segmentProgress = (loadingProgress / 10);
                    const isActive = index < Math.floor(segmentProgress);
                    const isPartiallyActive = index === Math.floor(segmentProgress) && segmentProgress % 1 > 0;
                    
                    return (
                      <div
                        key={index}
                        style={{
                          flex: '1',
                          height: '100%',
                          background: isActive 
                            ? '#003EC3'
                            : isPartiallyActive 
                              ? `linear-gradient(90deg, #003EC3 ${(segmentProgress % 1) * 100}%, transparent ${(segmentProgress % 1) * 100}%)`
                              : 'transparent',
                          border: '1px solid #808080',
                          borderRight: index === 9 ? '1px solid #808080' : 'none',
                          position: 'relative',
                          transition: 'background 0.3s ease-out'
                        }}
                      >
                      </div>
                  })}                </div>
                {/* 狀態文字 */}
                <div style={{
                  fontSize: '10px',
                  textAlign: 'center',
                  marginTop: '4px',
                  color: '#666',
                  fontFamily: 'monospace'
                }}>
                  {loadingProgress < 100 ? '正在載入工作室資料...' : '載入完成！'}
                </div>
              </div>
            </div>
          </div>


        </div>
      )}


      <div className="relative z-10">
        {!entered && (
          <section className="hero-block-grid relative min-h-screen">
            <div className="hero-logo-container fixed top-0 left-0 w-full z-50 bg-[#FFFFF3] py-4" style={{
              opacity: showRight ? 1 : 0,
              transform: `translateY(${showRight ? '0' : '-20px'})`,
              transition: 'all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1)',
              transitionDelay: '0.9s'
            }}>
              <img
                src="/cursor-07.png"
                alt="Liam Design Studio Logo"
                className="hero-logo"
                style={{
                  width: 'clamp(120px, 25vw, 300px)',
                  height: 'auto',
                  objectFit: 'contain',
                  filter: 'none'
                }}
              />
            </div>
            <div className="hero-grid-container pt-24 flex flex-col items-center justify-center min-h-screen">
            {/* 地圖區域 */}
            <div className="map-container mb-8" style={{
              opacity: showRight ? 1 : 0,
              transform: `translateY(${showRight ? '0' : '20px'})`,
              transition: 'all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1)',
              transitionDelay: '1.1s'
            }}>
              <img
                src="/yilan_mapv2-10.png"
                alt="Yilan Map"
                className="map-image"
                style={{
                  width: '70vw',
                  height: 'auto',
                  objectFit: 'contain',
                  filter: 'none'
                }}
              />
            </div>
            
            {/* ENTER 按鈕 */}
            <div className="enter-button-container" style={{
              opacity: showRight ? 1 : 0,
              transform: `translateY(${showRight ? '0' : '20px'})`,
              transition: 'all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1)',
              transitionDelay: '1.3s',
              zIndex: '100'
            }}>
              <button
                onClick={handleEnter}
                className="enter-btn"
                style={{
                  padding: 'clamp(12px, 3vw, 20px) clamp(24px, 6vw, 40px)',
                  fontSize: 'clamp(14px, 3.5vw, 20px)',
                  fontWeight: 'bold',
                  color: 'white',
                  backgroundColor: '#003EC3',
                  position: 'relative',
                  pointerEvents: 'auto',
                  border: 'none',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  zIndex: '100',
                  fontFamily: 'var(--font-press-start-2p)',
                  textShadow: '1px 1px 2px rgba(0,0,0,0.8)',
                  transition: 'background-color 0.3s ease'
                }}
                onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#002A8A'}
                onMouseLeave={(e) => e.currentTarget.style.backgroundColor = '#003EC3'}
              >
                ENTER
              </button>
            </div>

            
            <div className={`absolute bottom-0 left-0 right-0 ${isTransitioning ? 'transition-down' : ''}`} style={{
              opacity: showRight ? 1 : 0,
              transform: `translateY(${showRight ? '0' : '20px'})`,
              transition: 'all 0.8s cubic-bezier(0.34, 1.56, 0.64, 1)',
              transitionDelay: '0.9s'
            }}>
              <div className="w-full bg-black py-4 overflow-hidden">
                <div className="animate-marquee whitespace-nowrap">
                  {Array(4).fill(null).map((_, i) => (
                    <span key={i} className="text-white text-2xl font-extrabold mx-8" style={{ fontFamily: 'var(--font-press-start-2p)' }}>Design that listens. Design that grows.</span>
                ))}
                </div>
              </div>

              <div style={{ backgroundColor: "#003EC3" }} className="w-full py-4 overflow-hidden">
                <div className="animate-marquee-reverse whitespace-nowrap">
                  {Array(4).fill(null).map((_, i) => (
                    <span key={i} className="text-white text-2xl font-extrabold mx-8" style={{ fontFamily: 'var(--font-press-start-2p)' }}>Design that listens. Design that grows.</span>
                ))}
                </div>
              </div>
            </div>
          </section>
        )}

        {entered && (
          <>
            <div style={{ position: 'relative' }}>
              <img
                ref={runnerRef}
                src="/runner.gif"
                alt="陪跑員"
                style={{
                  position: 'absolute',
                  top: -250,
                  left: 80,
                  zIndex: 9999,
                  width: 'auto',
                  height: 'auto',
                  transform: 'scale(0.72)'
                }}
              />
              <div className="w-full bg-black py-4 overflow-hidden" style={{ position: 'relative', zIndex: 10 }}>
                <div className="animate-marquee whitespace-nowrap">
                  {Array(4).fill(null).map((_, i) => (
                    <span key={i} className="text-white text-2xl font-extrabold mx-8" style={{ fontFamily: 'var(--font-press-start-2p)' }}>Design that listens. Design that grows.</span>
                ))}
                </div>
              </div>
            </div>

            <div style={{ backgroundColor: "#003EC3", position: "relative", zIndex: 10 }} className="w-full py-4 overflow-hidden">
              <div className="animate-marquee-reverse whitespace-nowrap">
                {Array(4).fill(null).map((_, i) => (
                  <span key={i} className="text-white text-2xl font-extrabold mx-8" style={{ fontFamily: 'var(--font-press-start-2p)' }}>Design that listens. Design that grows.</span>
              ))}
              </div>
            </div>

            {/* 手機版漢堡選單 - 在跑馬燈和主內容之間 */}
            <div className="block lg:hidden w-full py-3 flex justify-center relative" style={{ 
              zIndex: 50, 
              background: '#2a2a2a',
              minHeight: '60px',
              alignItems: 'center',
              justifyContent: 'center'
            }}>
              <button
                onClick={() => {
                  setMobileMenuOpen(!mobileMenuOpen);
                }}
                style={{
                  width: '44px',
                  height: '44px',
                  background: '#c0c0c0',
                  border: '2px outset #c0c0c0',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  cursor: 'pointer',
                  zIndex: '100',
                  fontFamily: 'var(--font-zpix), monospace',
                  fontSize: '18px',
                  position: 'relative',
                  zIndex: 51
                }}
                onMouseDown={(e) => {
                  e.preventDefault();
                  (e.target as HTMLElement).style.border = '2px inset #c0c0c0';
                }}
                onMouseUp={(e) => (e.target as HTMLElement).style.border = '2px outset #c0c0c0'}
                onMouseLeave={(e) => (e.target as HTMLElement).style.border = '2px outset #c0c0c0'}
              >
                ☰
              </button>
              {mobileMenuOpen && (
                <div style={{
                  position: 'absolute',
                  top: '100%',
                  left: '50%',
                  transform: 'translateX(-50%)',
                  background: '#c0c0c0',
                  border: '2px outset #c0c0c0',
                  minWidth: '200px',
                  zIndex: 52
                }}>
                  <div onClick={goToHome} style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                  zIndex: '100',
                    borderBottom: '1px solid #808080',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    fontFamily: 'var(--font-zpix), monospace',
                    fontSize: '12px'
                  }}>
                    <span>🏠</span>
                    <span>回主頁</span>
                  </div>
                                     <div onClick={openIllustrationFolder} style={{
                     padding: '12px 16px',
                     cursor: 'pointer',
                  zIndex: '100',
                     borderBottom: '1px solid #808080',
                     display: 'flex',
                     alignItems: 'center',
                     gap: '8px',
                     fontFamily: 'var(--font-zpix), monospace',
                     fontSize: '12px'
                   }}>
                     <span>🎨</span>
                     <span>插畫</span>
                   </div>
                  <div style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                  zIndex: '100',
                    borderBottom: '1px solid #808080',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    fontFamily: 'var(--font-zpix), monospace',
                    fontSize: '12px'
                  }}>
                    <span>🎨</span>
                    <span>設計</span>
                  </div>
                  <div style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                  zIndex: '100',
                    borderBottom: '1px solid #808080',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    fontFamily: 'var(--font-zpix), monospace',
                    fontSize: '12px'
                  }}>
                    <span>🏷️</span>
                    <span>品牌</span>
                  </div>
                  <div style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                  zIndex: '100',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    fontFamily: 'var(--font-zpix), monospace',
                    fontSize: '12px'
                  }}>
                    <span>📧</span>
                    <span>聯絡我們</span>
                  </div>
                </div>
              )}
            </div>

            <div className="fixed left-0 bottom-0 z-50 p-6" style={{ transform: 'scale(1.08)', transformOrigin: 'left bottom', zIndex: 10000 }}>
              <div className="logo-block long">
                <Image src="/cursor-07.png" alt="Liam Design Logo" width={108} height={108} style={{ display: 'none' }} />
              </div>
            </div>

            <div className="relative w-full h-auto lg:h-[100vh] flex flex-col lg:flex-row overflow-auto lg:overflow-hidden">
              <div className={`h-auto lg:h-full lg:w-1/3 w-full min-w-[320px] lg:max-w-[480px] flex-shrink-0 lg:sticky top-0 left-0 z-20 bg-transparent lg:border-r border-gray-200 p-0 m-0 ${!showVerticalWindow ? 'hidden lg:block' : ''}`} style={{height: 'auto', minHeight: '60vh'}}>
                <VerticalWindow 
                  width="100%" 
                  height="100vh"
                />
              </div>
              <section 
                className="flex-1 lg:w-2/3 w-full h-auto lg:h-full relative overflow-auto lg:overflow-hidden desktop-area desktop-section" 
                style={{
                  background: '#2a2a2a',
                  backgroundImage: `url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff' fill-opacity='0.05' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E")`,
                  padding: '0',
                  minHeight: '40vh'
                }}
                onMouseMove={handleMouseMove}
                onMouseUp={handleMouseUp}
              >
                {/* 桌面模式 - 可拖拽視窗 */}
                <div className="hidden lg:block">
                  {/* 桌面圖示 - 僅桌面顯示 */}
                  <div className="hidden lg:block absolute top-4 left-4 flex flex-col gap-4" style={{ zIndex: 15 }}>
                    {/* 插畫資料夾 */}
                    <div 
                      className="flex flex-col items-center cursor-pointer group"
                      onClick={openIllustrationFolder}
                      style={{ width: '60px' }}
                    >
                      <div className="flex flex-col items-center justify-center p-2 rounded hover:bg-white hover:bg-opacity-20 transition-colors">
                        <div style={{ fontSize: '54px', marginBottom: '4px' }}>📁</div>
                        <span style={{ 
                          fontSize: '10px',
                  textAlign: 'center', 
                          color: '#ffffff', 
                          textAlign: 'center',
                          fontFamily: 'var(--font-zpix), monospace',
                          textShadow: '1px 1px 2px rgba(0,0,0,0.8)',
                          lineHeight: '1.2'
                        }}>
                          插畫
                        </span>
                      </div>
                    </div>

                    {/* 設計資料夾 */}
                    <div 
                      className="flex flex-col items-center cursor-pointer group"
                      style={{ width: '60px' }}
                    >
                      <div className="flex flex-col items-center justify-center p-2 rounded hover:bg-white hover:bg-opacity-20 transition-colors">
                        <div style={{ fontSize: '54px', marginBottom: '4px' }}>📁</div>
                        <span style={{ 
                          fontSize: '10px',
                  textAlign: 'center', 
                          color: '#ffffff', 
                          textAlign: 'center',
                          fontFamily: 'var(--font-zpix), monospace',
                          textShadow: '1px 1px 2px rgba(0,0,0,0.8)',
                          lineHeight: '1.2'
                        }}>
                          設計
                        </span>
                      </div>
                    </div>

                    {/* 品牌資料夾 */}
                    <div 
                      className="flex flex-col items-center cursor-pointer group"
                      style={{ width: '60px' }}
                    >
                      <div className="flex flex-col items-center justify-center p-2 rounded hover:bg-white hover:bg-opacity-20 transition-colors">
                        <div style={{ fontSize: '54px', marginBottom: '4px' }}>📁</div>
                        <span style={{ 
                          fontSize: '10px',
                  textAlign: 'center', 
                          color: '#ffffff', 
                          textAlign: 'center',
                          fontFamily: 'var(--font-zpix), monospace',
                          textShadow: '1px 1px 2px rgba(0,0,0,0.8)',
                          lineHeight: '1.2'
                        }}>
                          品牌
                        </span>
                      </div>
                    </div>
                  </div>
                  {/* DS Logo 背景裝飾 */}
                  <div className="hidden lg:block absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2" style={{ zIndex: 1 }}>
                    <img
                      src="/cursor-07.png"
                      alt="DS Logo Background"
                      style={{
                        width: "auto",
                        height: "auto",
                        maxWidth: "500px",
                        maxHeight: "500px",
                        opacity: 0.6,
                        objectFit: "contain"
                      }}
                    />
                  </div>                  {/* LoginSignupCard 視窗 */}
                  {!windowStates.loginCard.closed && (
                    <div 
                      className="draggable-window"
                      style={{ 
                        position: windowStates.loginCard.maximized ? 'absolute' : 'absolute',
                        cursor: isDragging === 'loginCard' ? 'grabbing' : 'grab',
                        left: windowStates.loginCard.maximized ? '0' : `${windowPositions.loginCard.x}px`,
                        top: windowStates.loginCard.maximized ? '0' : `${windowPositions.loginCard.y}px`,
                        width: windowStates.loginCard.maximized ? '100%' : 'auto',
                        height: windowStates.loginCard.maximized ? '100%' : 'auto',
                        userSelect: 'none',
                        zIndex: getWindowZIndex('loginCard')
                      }}
                      onMouseDown={(e) => !windowStates.loginCard.maximized && handleMouseDown(e, 'loginCard')}
                    >
                    <LoginSignupCard 
                      title="來自土地的設計夥伴"
                      description="Liam Design Studio，專注於品牌設計與視覺傳達的創意工作室。我們相信好的設計源於深入的理解與溝通，每一個專案都承載著獨特的故事與價值。從品牌識別到數位設計，我們用創意打造令人印象深刻的品牌體驗。"
                      windowTitle="Liam Design Studio - Intro.exe"
                      leftImage="/hero.png"
                      width={windowStates.loginCard.maximized ? "100%" : "600px"}
                      height={windowStates.loginCard.maximized ? "100%" : "350px"}
                      onMinimize={() => handleMinimize('loginCard')}
                      onMaximize={() => handleMaximize('loginCard')}
                      onClose={() => handleClose('loginCard')}
                      isMinimized={windowStates.loginCard.minimized}
                      isMaximized={windowStates.loginCard.maximized}
                    />
                  </div>
                  )}

                  {/* TextWindow 視窗 */}
                  {!windowStates.textWindow.closed && (
                    <div 
                      className="draggable-window"
                      style={{ 
                        position: 'absolute', 
                        left: windowStates.textWindow.maximized ? '0' : `${windowPositions.textWindow.x}px`,
                        top: windowStates.textWindow.maximized ? '0' : `${windowPositions.textWindow.y}px`,
                        width: windowStates.textWindow.maximized ? '100%' : 'auto',
                        height: windowStates.textWindow.maximized ? '100%' : 'auto',
                        cursor: isDragging === 'textWindow' ? 'grabbing' : 'grab',
                        userSelect: 'none',
                        zIndex: getWindowZIndex('textWindow')
                      }}
                      onMouseDown={(e) => !windowStates.textWindow.maximized && handleMouseDown(e, 'textWindow')}
                    >
                      <TextWindow 
                        windowTitle="專案說明.txt"
                        width={windowStates.textWindow.maximized ? "100%" : "400px"}
                        height={windowStates.textWindow.maximized ? "100%" : "300px"}
                        onMinimize={() => handleMinimize('textWindow')}
                        onMaximize={() => handleMaximize('textWindow')}
                        onClose={() => handleClose('textWindow')}
                        isMinimized={windowStates.textWindow.minimized}
                        isMaximized={windowStates.textWindow.maximized}
                        content={`Liam Design Studio - Design Studio

我們的理念：
每個品牌都有獨特的故事，我們用設計讓這些故事發光發熱。

核心服務：
• 品牌識別設計
• 視覺形象規劃  
• 印刷品設計
• 包裝設計
• 網站設計

設計流程：
1. 深度溝通了解需求
2. 創意發想概念確立
3. 精緻設計細節完善
4. 完整交付使用指導

聯絡我們：
Email: hello@dongshan.design
Tel: 03-9XX-XXXX

在地設計，國際視野
讓設計成為溝通的橋樑`}
                      />
                    </div>
                  )}

                  {/* CarouselWindow 視窗 */}
                  {!windowStates.carouselWindow.closed && (
                    <div 
                      className="draggable-window"
                      style={{ 
                        position: 'absolute', 
                        left: windowStates.carouselWindow.maximized ? '0' : `${windowPositions.carouselWindow.x}px`,
                        top: windowStates.carouselWindow.maximized ? '0' : `${windowPositions.carouselWindow.y}px`,
                        width: windowStates.carouselWindow.maximized ? '100%' : 'auto',
                        height: windowStates.carouselWindow.maximized ? '100%' : 'auto',
                        cursor: isDragging === 'carouselWindow' ? 'grabbing' : 'grab',
                        userSelect: 'none',
                        zIndex: getWindowZIndex('carouselWindow')
                      }}
                      onMouseDown={(e) => !windowStates.carouselWindow.maximized && handleMouseDown(e, 'carouselWindow')}
                    >
                      <CarouselWindow 
                        windowTitle="作品集展示.exe"
                        width={windowStates.carouselWindow.maximized ? "100%" : "450px"}
                        height={windowStates.carouselWindow.maximized ? "100%" : "320px"}
                        onMinimize={() => handleMinimize('carouselWindow')}
                        onMaximize={() => handleMaximize('carouselWindow')}
                        onClose={() => handleClose('carouselWindow')}
                        isMinimized={windowStates.carouselWindow.minimized}
                        isMaximized={windowStates.carouselWindow.maximized}
                        images={[
                          '/illustration_1.png',
                          '/illustration_2.png', 
                          '/illustration_3.png',
                          '/illustration_4.png',
                          '/illustration_5.png',
                          '/illustration_6.png'
                        ]}
                        autoPlay={true}
                        autoPlayInterval={5000}
                      />
                    </div>
                  )}

                  {/* Windows 98 Style 插畫視窗 */}
                  {!windowStates.illustrationWindow.closed && (
                    <div 
                      className="draggable-window"
                      style={{ 
                        position: 'absolute', 
                        left: windowStates.illustrationWindow.maximized ? '0' : `${windowPositions.illustrationWindow.x}px`,
                        top: windowStates.illustrationWindow.maximized ? '0' : `${windowPositions.illustrationWindow.y}px`,
                        width: windowStates.illustrationWindow.maximized ? '100%' : 'auto',
                        height: windowStates.illustrationWindow.maximized ? '100%' : 'auto',
                        cursor: isDragging === 'illustrationWindow' ? 'grabbing' : 'grab',
                        userSelect: 'none',
                        zIndex: getWindowZIndex('illustrationWindow')
                      }}
                      onMouseDown={(e) => !windowStates.illustrationWindow.maximized && handleMouseDown(e, 'illustrationWindow')}
                    >
                      <div style={{
                        background: '#000',
                        border: '6px solid #fff',
                        borderRadius: '0',
                        padding: '0',
                        boxShadow: '8px 8px 0px #666',
                        fontFamily: 'var(--font-zpix), monospace',
                        position: 'relative',
                        overflow: 'hidden',
                        width: windowStates.illustrationWindow.maximized ? '100%' : '400px',
                        height: windowStates.illustrationWindow.maximized ? '100%' : '300px'
                      }}>
                        <div style={{
                          background: 'linear-gradient(to bottom, #333 0%, #000 100%)',
                          borderBottom: '2px solid #fff',
                          padding: '4px 8px',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'space-between',
                          fontSize: '12px',
                          fontWeight: 'bold',
                          color: '#fff'
                        }}>
                          <span>插畫作品展示</span>
                          <div style={{ display: 'flex', gap: '4px' }}>
                            <div 
                              onClick={() => handleMinimize('illustrationWindow')}
                              style={{
                                width: '16px',
                                height: '14px',
                                background: '#333',
                                border: '1px solid #666',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                cursor: 'pointer',
                  zIndex: '100',
                                color: '#fff'
                              }}>_</div>
                            <div 
                              onClick={() => handleMaximize('illustrationWindow')}
                              style={{
                                width: '16px',
                                height: '14px',
                                background: '#333',
                                border: '1px solid #666',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                cursor: 'pointer',
                  zIndex: '100',
                                color: '#fff'
                              }}>□</div>
                            <div 
                              onClick={() => handleClose('illustrationWindow')}
                              style={{
                                width: '16px',
                                height: '14px',
                                background: '#333',
                                border: '1px solid #666',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                cursor: 'pointer',
                  zIndex: '100',
                                color: '#fff'
                              }}>×</div>
                          </div>
                        </div>
                        <div style={{
                          background: '#222',
                          borderBottom: '1px solid #666',
                          padding: '4px 8px',
                          display: 'flex',
                          gap: '8px',
                          fontSize: '11px'
                        }}>
                          <span style={{ color: '#fff', fontWeight: 'bold' }}>作品</span>
                          <span style={{ color: '#fff' }}>風格</span>
                          <span style={{ color: '#fff' }}>技法</span>
                          <span style={{ color: '#fff' }}>聯絡</span>
                        </div>
                        <div style={{ padding: '20px' }}>
                          <h1 style={{
                            fontSize: '24px',
                            fontWeight: 'bold',
                            color: '#fff',
                            margin: '0 0 15px 0',
                            textAlign: 'center',
                            textTransform: 'uppercase',
                            letterSpacing: '2px'
                          }}>
                            插畫作品展示
                          </h1>
                          <p style={{
                            fontSize: '14px',
                            lineHeight: '1.6',
                            color: '#ccc',
                            margin: '0',
                            textAlign: 'justify'
                          }}>
                            探索創意與想像的無限可能，每一幅插畫都是故事的開始。從傳統手繪到數位創作，展現多元的藝術風格與表現手法。
                          </p>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* 響應式模式 - 一欄式布局 */}
                <div className="lg:hidden h-auto overflow-y-auto" style={{ paddingBottom: '40px' }}>
                  <div style={{ 
                    display: 'flex', 
                    flexDirection: 'column', 
                    gap: 'clamp(15px, 4vw, 20px)',
                    padding: '0',
                    width: '100%'
                  }}>
                    {/* 條件渲染手機版視窗 */}
                    {!windowStates.loginCard.closed && (
                      <LoginSignupCard 
                      title="來自土地的設計夥伴"
                      description="Liam Design Studio，專注於品牌設計與視覺傳達的創意工作室。我們相信好的設計源於深入的理解與溝通，每一個專案都承載著獨特的故事與價值。從品牌識別到數位設計，我們用創意打造令人印象深刻的品牌體驗。"
                      windowTitle="Liam Design Studio - Intro.exe"
                      leftImage="/hero.png"
                      width="100%"
                      height="clamp(280px, 50vw, 350px)"
                    />
                    )}
                    
                    {!windowStates.textWindow.closed && (
                      <TextWindow 
                      windowTitle="專案說明.txt"
                      width="100%"
                      height="clamp(250px, 45vw, 300px)"
                      content={`Liam Design Studio - Design Studio

我們的理念：
每個品牌都有獨特的故事，我們用設計讓這些故事發光發熱。

核心服務：
• 品牌識別設計
• 視覺形象規劃  
• 印刷品設計
• 包裝設計
• 網站設計

設計流程：
1. 深度溝通了解需求
2. 創意發想概念確立
3. 精緻設計細節完善
4. 完整交付使用指導

聯絡我們：
Email: hello@dongshan.design
Tel: 03-9XX-XXXX

在地設計，國際視野
讓設計成為溝通的橋樑`}
                    />
                    )}
                    
                    {!windowStates.carouselWindow.closed && (
                      <CarouselWindow 
                      windowTitle="作品集展示.exe"
                      width="100%"
                      height="clamp(280px, 50vw, 350px)"
                      images={[
                        '/illustration_1.png',
                        '/illustration_2.png', 
                        '/illustration_3.png',
                        '/illustration_4.png',
                        '/illustration_5.png',
                        '/illustration_6.png'
                      ]}
                      autoPlay={true}
                      autoPlayInterval={5000}
                    />
                    )}

                    {/* Windows 98 Style 插畫視窗 - 手機版 */}
                    {!windowStates.illustrationWindow.closed && (
                      <div style={{
                        background: '#000',
                        border: '6px solid #fff',
                        borderRadius: '0',
                        padding: '0',
                        boxShadow: '8px 8px 0px #666',
                        fontFamily: 'var(--font-zpix), monospace',
                        width: '100%',
                        height: 'clamp(250px, 45vw, 300px)'
                      }}>
                        <div style={{
                          background: 'linear-gradient(to bottom, #333 0%, #000 100%)',
                          borderBottom: '2px solid #fff',
                          padding: '8px',
                          fontSize: '12px',
                          fontWeight: 'bold',
                          color: '#fff'
                        }}>
                          插畫作品展示
                        </div>
                        <div style={{
                          background: '#222',
                          borderBottom: '1px solid #666',
                          padding: '4px 8px',
                          fontSize: '11px',
                          color: '#fff'
                        }}>
                          作品 | 風格 | 技法 | 聯絡
                        </div>
                        <div style={{ padding: '20px' }}>
                          <h1 style={{
                            fontSize: '18px',
                            fontWeight: 'bold',
                            color: '#fff',
                            margin: '0 0 15px 0',
                            textAlign: 'center'
                          }}>
                            插畫作品展示
                          </h1>
                          <p style={{
                            fontSize: '12px',
                            lineHeight: '1.6',
                            color: '#ccc',
                            margin: '0',
                            textAlign: 'center'
                          }}>
                            探索創意與想像的無限可能，每一幅插畫都是故事的開始。從傳統手繪到數位創作，展現多元的藝術風格與表現手法。
                          </p>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </section>
            </div>
          </>
        )}
      </div>

      <style jsx>{`
        /* 手機版滾動調整 */
        
          .hero-logo-container {
             display: flex;
             justify-content: center;
             align-items: center;
             width: 100%;
             position: fixed;
             top: 0;
             left: 0;
             z-index: 50;
             background-color: #FFFFF3;
             padding: 1rem 0;
           }
           
           .hero-logo {
             /* 扁平化風格 */
           }
           

          .map-container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
          }
          
          .map-image {
            transition: all 0.3s ease;
          }
          
          .enter-button-container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
          }
          
          .enter-btn {
            transition: all 0.3s ease;
          }
          
          .enter-btn:hover {
            transform: scale(1.05);
          }
@media (max-width: 1023px) {
          .map-image {
            width: 70vw !important;
          }
          
          .enter-btn {
            padding: clamp(10px, 2.5vw, 16px) clamp(20px, 5vw, 32px) !important;
            fontSize: clamp(12px, 3vw, 18px) !important;
          }

           
           .hero-logo {
             width: clamp(100px, 30vw, 200px) !important;
           }
           
           .hero-logo {
             width: clamp(100px, 30vw, 200px) !important;
           }
          * {
            box-sizing: border-box;
          }
          
          body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            overflow-x: hidden;
          }
          
          /* 入口modal響應式調整 */
          .win98-window {
            max-height: 85vh !important;
            margin: 20px 10px !important;
          }
          
                     /* 首頁響應式調整 */
           .hero-grid-container {

        /* 隱藏所有標語 */
          display: none !important;
        }          position: relative;
          width: 100%;
          max-width: 1440px;
          margin: 0 auto;
          padding: 0 48px;
          z-index: 1;
        }

        .transition-up {
          transform: translateY(-100%);
          opacity: 0;
        }
        .transition-down {
          transform: translateY(100%);
          opacity: 0;
        }
        .transition-map {
          opacity: 0;
          transform: scale(1.5);
        }
        .transition-fade {
          opacity: 0;
          transform: scale(1.3);
        }
        .ds-logo-bounce {
          animation: bounce-logo 2s ease-in-out infinite;
        }
        @keyframes bounce-logo {
          0%, 100% {
            transform: translateY(0px) scale(0.672);
          }
          50% {
            transform: translateY(-20px) scale(0.672);
          }
        }
        .enter-btn-bounce {
          animation: bounce-enter 2s ease-in-out infinite;
        }
        @keyframes bounce-enter {
          0%, 100% {
            transform: translateX(-50%) translateY(0px) scale(1.5);
          }
          50% {
            transform: translateX(-50%) translateY(-20px) scale(1.5);
          }
        }

      `}</style>
    </div>
  );
} 